// Generated by CoffeeScript 1.6.3
(function() {
  define(['jquery', 'knockout', 'jquery.fileupload', 'humanize'], function($, ko, jf, humanize) {
    return function() {
      var FileViewModel, UploadViewModel;
      UploadViewModel = function() {
        var self;
        self = this;
        this.entries = ko.observableArray();
        this.cancel = function(entry) {
          if (entry.jqXHR) {
            entry.jqXHR.abort();
            return entry.status('cancelled');
          }
        };
      };
      FileViewModel = function(file) {
        var self;
        self = this;
        this.filename = file.name;
        this.size = humanize.filesize(file.size);
        this.status = ko.observable('pending');
        this.progress = ko.observable(0);
        this.progressPercent = ko.computed(function() {
          if (self.status !== 'working') {
            return '100%';
          }
          return "" + (self.progress()) + "%";
        });
      };
      $(function() {
        var uploadViewModel;
        uploadViewModel = new UploadViewModel();
        $('#fileupload').fileupload({
          basic: true,
          maxNumberOfFiles: 1,
          dataType: 'json',
          add: function(e, data) {
            var entry, file;
            file = data.files[0];
            entry = new FileViewModel(file);
            uploadViewModel.entries.push(entry);
            data.context = entry;
            entry.jqXHR = data.submit();
            return entry.status('working');
          },
          progress: function(e, data) {
            var progress;
            progress = parseInt(data.loaded / data.total * 100, 10);
            return data.context.progress(progress);
          },
          done: function(e, data) {
            return data.context.status('success');
          },
          fail: function(e, data) {
            return data.context.status('error');
          }
        });
        return ko.applyBindings(uploadViewModel);
      });
    };
  });

}).call(this);
